spring.application.name=SpringBootBoard

# 1. 포트번호 수정 -> 톰캣 서버가 내장되어 있기 때문에 서버 포트를 여기에서 바꿔줄 수 있음
server.port=8086

# *참고) 부트에서는 .properties 라는 확장자와 .yaml 두 가지 확장자가 있는데 둘 다 같은 역할을 하는데 문법만 다름
# 					-> key = value		-> key:value 들여쓰기

# DB 설정 없을 시 에러가 나는 이유
# boot의 경우 추가한 lib의 필수적인 설정이 없으면 에러가 발생하게 됨
# 즉, DB 환경 설정이 빠져서 에러가 발생하는 것 (mysql 관련 lib)
# => 설정해 줘야 하는 값 driver, url, username, password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://project-db-campus.smhrd.com:3307/navercloudtest
# spring_db : 스키마 이름
spring.datasource.username=navercloudtest
spring.datasource.password=navercloudtest

# JPA 환경 설정
# - DDL 코드를 어떻게 할 건지
# - 어떤 database를 연결할 지

# 필수 사항
# 이 두 줄의 코드는 JPA 설정에서 필수로 해줘야 함! => 설정 안해주면 정상동작 X
spring.jpa.hibernate.ddl-auto=create
# auto 설정할 수 있는 값 : create, updata, none
# entity 코드 수정 시에만 update 될 수 있게

spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect


# 선택 사항
spring.jpa.show-sql=true
# JPA 사용 하다 보면 sql문이 눈에 보이지 않아 정상적으로 동작되는 지 의문일 때가 있음
# console 창에 sql문으로 출력해주는 코드 -> sql문이 정렬되지 않은 채로 나옴

spring.jpa.properties.hibernate.format_sql = true
# console 창에 출력된 sql 문을 정렬해줌

# 파일 업로드 설정(글쓰기 시 서버에 이미지 저장하기 위함)
spring.servlet.multipart.enabled=true
# 한 파일의 용량-> 최대 10MB까지만 허용
spring.servlet.multipart.max-file-size = 10MB
# 한 번에 처리될 수 있는 용량
spring.servlet.multipart.max-request-size = 20MB
# 이미지 업로드 시 저장 될 폴더
file.upload-dir = /home/git/upload












